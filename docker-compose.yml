version: "3"

services:
  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: <MYSQL_ROOT_PASSWORD>  # MYSQL_ROOT_PASSWORD     # Environment variables can be given without quotes
      MYSQL_DATABASE: <DATABASE_NAME> # DATABASE_NAME
      MYSQL_PASSWORD: <MYSQL_ROOT_PASSWORD> # MYSQL_ROOT_PASSWORD
    expose:
      - 3306
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - main
  
  redis_host:
    image: redis:latest
    restart: always
    expose:
      - 6379
    volumes:
      - redis_data:/data
    networks:
      - main

  flask_app:
    build: ./backend  # build the flask app using the Dockerfile in the backend directory
    expose:
      - 5000
    links:
      - mysql:mysql # allows flask_app to communicate with mysql using hostname mysql
      - redis_host:redis_host # allows flask_app to communicate with redis_host using hostname redis_host
    depends_on:
      - mysql
      - redis_host
    environment:
      - APP_CODE=Flask-1458
      - MYSQL_PORT=3306
      - MYSQL_HOST=mysql  # service identifier in the docker-compose file
      - MYSQL_USER=root
      - MYSQL_PASSWORD=<MYSQL_ROOT_PASSWORD>  # MYSQL_ROOT_PASSWORD
      - MYSQL_DB=<DATABASE_NAME>  # DATABASE_NAME
      - REDIS_HOST=redis_host # service identifier in the docker-compose file
      - REDIS_PORT=6379
    networks:
      - main

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    links:
      - flask_app:flask_app   # allows nginx to communicate with flask_app using hostname flask_app
    depends_on:
      - flask_app
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - main

networks:
  main:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
